day12
데이터 모델링 -> DBMS Test -> JAVA Test

0. 데이터 모델링 순서 절차

	요구사항 분석
	개념적 모델링
	논리적 모델링
	물리적 모델링
	구현

1.ERD (Entity Relationship Diagram)

1) Entity(개체)
	정의가능한 사물 또는 개념
	데이터베이스의 테이블이 엔티티
2) Entity Attribute(엔티티 속성)
	엔티티에는 개체각 갖고있는 속성
	데이터베이스의 테이블의 각 컬럼들이 엔티티 속성
3) Entity Domain
	도메인은 속성의 값 타입 제약사항 등에 대한 값의 범위 를 표현
4) 엔티티 분류
	엔티티는 저장하는 데이터 주제에 따라서 종류가 다양함
	
	유형엔티티		물리적 형태
	무형엔티티		물리적인 형태는 없고  개념적으로만 존재하는 엔티티(부서조직도 인터넷 장바구니 등)
	문서엔티티		업무 절차상에서 사용되는 문서나 전표 등에 대한 엔티티
	이력엔티티		업무상 반복적으로 이루어지는 행위나 사건의 내용을 일자, 시간별등으로 저장하기 위한 엔티티
	코드엔티티		무형엔티티의 일종, 각종 코드를 관리하기위한 엔티티(국가 코드나 ,각종분류 코드등)

2.ERD 키와 제약조건
	PK(primary key)
		 중복 없고 null값이없는 유일한값을 지정하는 식별자(다이아몬드 or 열쇠모양 or 구분선으로 표기)
	NOT NULL
		null 을 허용하지않는다(n or x or 체크 되어있는것으로 확인)
	FK(Foreign key)
		중복 이 있고 NUll값이 없는 다근 테이블과 관계를 맺는데 사용되는 속성
		참조 무결성을 유지하기위해 사용됨(데이터 베이스에서 관계를 맺고있는 두테이블 사이에서 데이터의 무결성을 보장하기위한 제약조건)
	
	UK , CHECK
		
	식별자 관계		비식별자관계
목적	강한 연결관계 표현		약한 연결관계 표현
자식PK	자식PK 구성에 포함		자식 일반속성에 포함
	실선표기			점선표기

1) 식별자관계
	실선으로 표기
	부모 자식 관계에서 자식이 부모의 PK를 FK로 참조해서 자신의 PK로 설정
	
2) 비식별자 관계
	점선으로 표기
	부머 자식 관계에서 자식이 부모의 pk를 fk로 참조해서 일반속성으로 사용

	
	
3) ERD 관계 카디널리티
	관계형 데이터베이스에서 엔티티간의 관계에서 한 엔티티의 레코드 수 와 다른 엔티티의 레코드 수 사이의 관계를 설명하는 개념
	
	1 대 1 대응	
			학생은 학과에 1:1 매칭(한명의 학생 하나의 학과만 갖는다)

			(1:1 관계)
			학생테입블		확과테이블
			학번		학번
			이름		과목번호
			주소		과목명
			전공		교수명

	1 대 다 대응	
			(1:N 관계)
			한명의 학생은 여러개의 취미를 가질수있다

			학생테입블		취미테이블
			학번		학번
			이름		취미
			주소		활동시간
			전공		
				
	다 대 1 대응
	다 대 다 대응(N:N관계)
	
	두개의 엔티티가 다 대 다 관계에 있는 경우 두개의 엔티티만으로는 서로 표현하는게 부족하고
	데이터 모델링에서 M:N관계를 완성되지않는 모델로 간주된다
	두 엔티티관계를 1:N, N:1로 조정해야한다

	한명의 고객이 여러개의 상품을 구매할 수도 있고 하나의 상품을 여러명이 구매할수도있다
			
			고객	주문	상품
			주문번호	주문번호	상품번호
			고객명	상품번호	상품명
			주문번호		상품가격
			상품구매여부	
			주소

4) ERD 관계 기호
		
	1:1 관계		부모는 하나의 자식이있다
	1:n 관계	 	부모는 하나이상의 자식이있다
	M:N 관계		하나이상의 부모와 하나이상의 자식
	1:1(o) 관계	부모는 하나의 자시깅 있을 수도있고 없을수도있다
	1:n(o) 관계 	부모는 여러개의 자식이 있을수도 있고 없을수 도있다
	

















- 계정
   cmd 
   sqlplus sys as sysdba
   CREATE USER 계정명 IDENTIFIED BY 비밀번호;
   
   권한부여
   GRANT CREATE SESSION TO 계정명;
   GRANT SELECT ON 테이블명 TO 계정명;

   계정 접속
   conn 계정명/비밀번호
   
   
- 계정명 : test01
- 비밀번호 : 1234

- 해당 계정명으로 테이블 생성 후 문제 풀기
- Orders 테이블 생성
   OrderID   CustomerID    OrderDate   TotalAmount
   1   101      2023-06-01   150,000
   2   102      2023-06-02   200,000
   3   103      2023-06-03   50,000
   4   104      2023-06-04   452,000

- Customers 테이블 생성
   CustomerID   FirstName   LastName   Email
   101      박      찬호      bch111@abc.com
   102      손      흥민      ss1234@abc.com
   103      박      지성      ba7777@abc.com

1. Orders 테이블에서 주문일자가 2023-06-02인 주문번호와 총금액 조회하기
2. Customer테이블에서 ba7777@abc.com인 고객의 성과 이름을 Name으로 조회하기
3. Orders 테이블에서 각 고객별로 주문한 총금액 조회
   [조회결과]
   CustomerId      TotalAmount
   101         150,000
   102         200,000
   103         50,000
4. Customers 테이블에서 주문한적없는 고객의 성과 이름, Email 조회하기
5. Customers 테이블과 Orders 테이블에서 고객의 이름, 이메일, 주문일, 총 주문금액을 조회하기
   단, 주문일이 가장 최근인 주문 정보만 포함되어야함
6. Orders 테이블에서 주문금액이 평균 주문금액보다 큰 주문들의 정보를 조회하기
   단, 평균 주문 금액은 서브쿼리를 사용하여 계산하기