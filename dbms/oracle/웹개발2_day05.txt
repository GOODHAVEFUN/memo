day05
복습 -> sql문

0. 복습
	SLECET [DISTINCT] 컬럼명 [AS 별칭] FROM 테이블명
	ORDER BY 컬럼명 [ASC or DESC];
1. SQL
자료형(Data Type) : 값의 종류
	문자 : char / varchar2
	숫자 : number
	날짜 : date

2. 연산자
	연산자 피연산자 자리에 어떤 타입의 값이 오는지,
	연산자가 어떻게 동작하는지,
	연산의 결과가 어떤 타입의 값인지 아는것이 중요하다.

	연결연산자
		a||b(concatenation, 연쇄) : a와 b를 연결해준다
		숫자, 날짜, 문자 타입이 피연산자로 올 수 있으며
		앞에 있는 값과 뒤에 있는 값을 연결한다
		연결의 결과는 문자타입이다

	산술연산자
		+, -, *, /
		피연산자에 숫자타입을 사용한다
		각각 덧셈, 뺄셈, 곱셈, 나눗셈을 연산한다
		연산의 결과는 숫자타입이다

		+, -는 날짜타입도 가능하다
		날짜와 숫자간의 +, - 연산 결과는 날짜타입이다
		날짜와 날짜간의 +, - 연산 결과는 숫자타입이다

	관계연산자
		a > b :
		a < b :
		a >= b :
		a <= b : 
		a = b : a와 b가 같다
		a <> b, a != b : a와 b가 같지않다(sql에서는 <> 표준이다)

	where 절 : 원하는 행을 조회하거나 연산처리한다
		SELECT 컬럼명 FROM 테이블명 WHERE 조건;

별칭을 설정할 경우에는 명령어들의 순서를 잘 생각해야한다

SELECT first_name 이름, last_name 성, salary 봉급	 3. 각 컬럼에 별칭을 붙여서 조회	
FROM employees					 1. EMPLOYEES 테이블에서
WHERE 봉급 >= 10000				 2. 봉급을 찾아라(오류발생)
ORDER BY 봉급; 					 4. 봉급 오름차순으로 정렬

=> 별칭이 생기기 전에 WHERE절이 실행되므로 별칭이 아닌 컬럼명으로 사용해야한다

	SQL연산자
		BETWEEN a AND b : a이상 b이하인 조건
		IN(a, b, c, ..) : a 혹은 b 혹은 c 혹은 .. 일 조건
		LIKE	: 문자열 패턴을 검색하는데 사용하는 연산자
			%(아무거나)
			_(자리수)

		IS NULL/IS NOT NULL
		NULL	: 값이 없음을 나타내는 값
		NULL값을 확인할 때는 관계연산자에 =, <>로 사용할 수 없다(조회되지 않음)

		ANY(a, b, c) : a, b, c 중 아무거나 만족하면
		ALL(a, b, c) : a, b, c를 전부 만족하면		
		ANY, ALL은 비교연산자( =, <, >)와 함께 쓰임

	논리연산자
		피연산자 자리에 조건이 온다
		여러개의 조건을 연결할 때 사용한다
		a AND b	: a조건 그리고 b조건을 만족하는 조건
			  a와 b 모두 True -> True
		a OR b	: a조건 또는 b조건을 만족하는 조건
			  a와 b 둘 중 하나라도 True -> True
		NOT a	: a조건을 만족하지 않는 조건
			  True -> False, False -> True

3. CRUD
	기본적인 데이터 처리 기능
	C(Create) 생성, R(Read) 읽기, U(Update) 수정, D(Delete) 삭제

SQL문(쿼리문)의 종류
	SQL 명령어의 성격에 따라 분류한 것이다
	1. DDL(Data Definition Language) : 데이터 정의 언어
		테이블 조작 또는 제어 관련 쿼리문
		
	2. DML(Data Manipulation Language) : 데이터 조작 언어
		데이터를 조작하는 쿼리문

	3. DCL(Data Control Language) : 데이터 제어 언어(권한)
	4. TCL(Transction Control Language) : 트랜잭션 제어 언어

DML : 데이터 조작언어
SELECT : 조회
	SELECT 컬럼명 FROM 테이블명 [WHERE 조건식];

INSERT : 추가
	원하는 컬럼만 골라서 값을 저장할 때 사용
	INSERT INTO 테이블명(컬럼명, ...) VALUES (값, ..);
	
	모든 컬럼에 값을 넣을 때 사용
	INSERT INTO 테이블명 VALUES (값,...);

UPDATE : 수정
	UPDATE 테이블명 SET 컬럼명1 = 값1, 컬럼명2 = 값2, ... [WHERE 조건식];
	WHERE 절을 생략하면 내가 선택한 컬럼의 모든 행에 값이 저장된다

DELETE : 삭제
	DELETE FROM 테이블명 [WHERE 조건식];
	WHERE를 생략하면 모든 값이 삭제된다(주의)

sql파일 하나만들기 파일명 : test.sql 
5시 15분까지
[select 연습]

employees 테이블 이용
1. 직원들 중 봉급이 5000 이상인 직원들의 모든 정보 조회하기

2. 직원들 중 부서번호가 30번인 직원들의 이름과 입사일 조회하기

3. 직원들 중 성이 Smith인 직원들의 이름과 봉급 조회하기

4. 직원들 중 봉급이 3000미만이거나 10000이상인 직원들의 이름과 봉급 조회하기

5. 직원들 중 이름이 A로 시작하는 직원들의 이름과 성 조회하기

6. 직원들 중 성에 o가 포함되고 이름이 4글자인 직원들의 이름과 성, 부서번호 조회하기

7. 직원들 중 이름이 J로 시작하고 성이 s로 끝나는 직원들의 이름과 성 조회하기

















